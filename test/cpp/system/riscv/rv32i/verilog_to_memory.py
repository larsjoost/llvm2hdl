import argparse
import sys

parser = argparse.ArgumentParser(
                    prog='verilog_to_memory',
                    description='Converts a Verilog file generated by objcopy to a C memory file')

parser.add_argument('-f', dest='input_filename', type=str, required=True)
parser.add_argument('-o', dest='output_filename', type=str, required=True)

arguments = parser.parse_args(sys.argv[1:])

memory_content = []

with open(arguments.input_filename, 'r') as fh:
    content = fh.readlines()
    for line in content:
        if not line.startswith("@"):
            memory_content.extend(line.split())

instructions = []

while memory_content:
    instruction = memory_content[:4]
    instruction.reverse()
    word = "".join(instruction)
    instructions.append(f"0x{word}")
    memory_content = memory_content[4:]

memory_instructions = ", ".join(instructions)

code = f"""
#include <stdint.h>

#include "test.h"

static uint32_t instruction_memory[MEMORY_SIZE] = {{
    {memory_instructions}
}};

"""

with open(arguments.output_filename, 'w') as fh:
    fh.write(code)

